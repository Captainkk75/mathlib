import category_theory.category.Cat
import category_theory.bicategory.basic

universes v u

namespace category_theory

open category_theory

end category_theory

namespace Cat

open category_theory

@[simps]
instance : bicategory (Cat.{v u}) :=
{ hom := Œª C D, C ‚•§ D,
  id := Œª C, ùü≠ C,
  comp := Œª _ _ _ F G, F ‚ãô G,
  hom_category := Œª C D, functor.category C D,
  whisker_left := Œª _ _ _ F _ _ Œ∑, whisker_left F Œ∑,
  whisker_right := Œª _ _ _ _ _ Œ∑ H, whisker_right Œ∑ H,
  whisker_exchange' := by { intros, ext, dsimp, simp },
  associator := Œª _ _ _ _ F G H, functor.associator F G H,
  left_unitor :=  Œª _ _ F, F.left_unitor,
  left_unitor_naturality' := by { intros, ext, dsimp, simp },
  right_unitor := Œª _ _ F, F.right_unitor,
  right_unitor_naturality' := by { intros, ext, dsimp, simp },
  pentagon' := by { intros, apply functor.pentagon },
  triangle' := by { intros, apply functor.triangle } }

end Cat
