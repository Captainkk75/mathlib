/-
Copyright (c) 2022 Kevin Buzzard. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Kevin Buzzard
-/

import field_theory.adjoin

/-!

# Relative normal closures.

If L/K is an algebraic field extension and `S : set L` is a subset of `L`, then
the relative normal closure `nclosure S` is the sub-`K`-field of `L` generated by the
elements of `L` whose minimal polynomials over `K` agree with the minimal
polynomial of an element of `S`. If you like, it is the subfield of `L` generated
over `K` by "the conjugates of the elements of `S` in `L`" but because there is no normality
assumption on `L/K` this is actually a more primitive notion.

Theorems (to come): IF L/K is normal then `(nclosure S)/K` is normal.

TODO: field_range (see discord)
TODO: Monnet normal closure (see github 12596)

-/

namespace intermediate_field

-- Note that if `x : L` is not algebraic over `K` then its min poly will be junk, which
-- right now is defined to be zero. Hence if `S` contains an element which is not
-- algebraic over `K` then `nclosure K S` will a subfield containing all transcendental
-- elements of `L` and hence also all algebraic elements `a` (consider `x` and `x+a`).

/-- If L/K is an (algebraic) field extension then the relative normal closure `nclosure K S`
of a subset S of L (for example, of a subfield E with K ⊆ E ⊆ L) is the intermediate
extension generated by all the elements of L which are zeros of the minimum polynomoals
of the elements of `S`. -/
def nclosure (K : Type*) [field K] {L : Type*} [field L] [algebra K L] (S : set L) :
  intermediate_field K L :=
adjoin K {x : L | ∃ s ∈ S, minpoly K x = minpoly K s }

variables {K L : Type*} [field K] [field L] [algebra K L]

variable (S : set L)

lemma adjoin_subset_nclosure : adjoin K S ≤ nclosure K S := adjoin.mono K S _ $ λ s hs, ⟨s, hs, rfl⟩

lemma nclosure_mono {S T : set L} (h : S ⊆ T) : nclosure K S ≤ nclosure K T :=
adjoin.mono K _ _ $ λ x ⟨s, hs, heq⟩, ⟨s, h hs, heq⟩

lemma subset_nclosure : S ⊆ (nclosure K S : set L) :=
(subset_adjoin K S).trans $ adjoin_subset_nclosure _

lemma nclosure_subset {S T : set L} (h : S ≤ (nclosure K T : set L)) :
  nclosure K S ≤ nclosure K T :=
begin
  apply adjoin_le_iff.2,
  rintros x ⟨s, hs, heq⟩,
  sorry
end

lemma nclosure_nclosure : nclosure K (nclosure K S : set L) = nclosure K S :=
le_antisymm sorry (subset_nclosure _)

end intermediate_field

open intermediate_field

variables {K L : Type*} [field K] [field L] [algebra K L]

/-- An intermediate subfield of `L/K` is (relatively) normal-closed over `K` if
it its own relative normal closure. -/
def is_nclosed (E : intermediate_field K L) : Prop := E = nclosure K E
def is_nclosed' (E : intermediate_field K L) : Prop := ∃ T : set L, E = nclosure K T

variable {E : intermediate_field K L}

-- false if L/K isn't normal?
lemma conjecture1 : is_nclosed E ↔ is_nclosed' E := sorry

-- if conjecture1 is false then this is two conjectures
lemma conjecture2 {E : intermediate_field K L} (hE : is_nclosed' E) {x y : L}
  (hxy : minpoly K x = minpoly K y) (hxE : x ∈ E) : y ∈ E :=
begin
  sorry
end
