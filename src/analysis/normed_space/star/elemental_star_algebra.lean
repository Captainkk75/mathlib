/-
Copyright (c) 2022 Frédéric Dupuis. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Frédéric Dupuis
-/

import topology.algebra.algebra
import analysis.normed_space.star.basic
import algebra.star.self_adjoint

variables {R : Type*} {A : Type*}
  [comm_semiring R] [semiring A] [topological_space A] [topological_ring A] [algebra R A]
  [has_star A]

variables (R)

/-- The closed subalgebra generated by `x` and `star x`. -/
def elemental_star_algebra (x : A) : subalgebra R A :=
  (algebra.adjoin R ({x, star x} : set A)).topological_closure

instance {x : A} [is_star_normal x] : comm_semiring (elemental_star_algebra R x) :=
{ mul_comm := λ y z, by { sorry },
  ..show semiring (elemental_star_algebra R x), by apply_instance }
