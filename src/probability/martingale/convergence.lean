/-
Copyright (c) 2022 Kexing Ying. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Kexing Ying
-/
import probability.martingale.upcrossing

/-!

# Maringale convergence theorems

-/

open topological_space filter
open_locale nnreal ennreal measure_theory probability_theory big_operators topological_space

namespace measure_theory

variables {Œ± Œπ : Type*} {m0 : measurable_space Œ±} {Œº : measure Œ±} {‚Ñ± : filtration ‚Ñï m0}
variables {a b : ‚Ñù} {f : ‚Ñï ‚Üí Œ± ‚Üí ‚Ñù} {N : ‚Ñï} {n m : ‚Ñï} {x : Œ±}

/-! We will now begin to prove the martingale convergence theorem.

Firstly, we want to show a real sequence `x` converges if
(a) `limsup |x| < ‚àû`,
(b) For all `a < b : ‚Ñö` we have `sup N, upcrossing_before a b x N < ‚àû`.

With this, for all `x` satisfying `limsup |Œª n, f n x| < ‚àû` and
for all `a < b : ‚Ñö`, `sup N, upcrossing_before a b f N x < ‚àû`, we have `Œª n, f n x` converges.

Assuming `f` is L¬π-bounded, using Fatou's lemma,
we have `ùîº[limsup |f|] ‚â§ limsup ùîº[|f|] < ‚àû` implying `limsup |f| < ‚àû a.e`. Furthermore, by
the upcrossing_before lemma, `sup N, upcrossing_before a b f N < ‚àû a.e.` implying `f` converges pointwise almost
everywhere.

-/

/-- If a realization of a stochastic process has bounded upcrossing_befores from below `a` to above `b`,
then that realization does not frequently visit both below `a` and above `b`. -/
lemma of_bdd_upcrossing_before (hab : a < b) (hx : ‚àÉ k : ‚Ñï, upcrossing a b f x ‚â§ k) :
  ¬¨((‚àÉ·∂† n in at_top, f n x < a) ‚àß (‚àÉ·∂† n in at_top, b < f n x)) :=
begin
  rw upcrossing_bdd_iff at hx,
  replace hx : ‚àÉ k, ‚àÄ N, upcrossing_before a b f N x < k,
  { obtain ‚ü®k, hk‚ü© := hx,
    exact ‚ü®k + 1, Œª N, lt_of_le_of_lt (hk N) k.lt_succ_self‚ü© },
  rintro ‚ü®h‚ÇÅ, h‚ÇÇ‚ü©,
  rw frequently_at_top at h‚ÇÅ h‚ÇÇ,
  refine not_not.2 hx _,
  push_neg,
  intro k,
  induction k with k ih,
  { simp only [zero_le', exists_const] },
  { obtain ‚ü®N, hN‚ü© := ih,
    obtain ‚ü®N‚ÇÅ, hN‚ÇÅ, hN‚ÇÅ'‚ü© := h‚ÇÅ N,
    obtain ‚ü®N‚ÇÇ, hN‚ÇÇ, hN‚ÇÇ'‚ü© := h‚ÇÇ N‚ÇÅ,
    exact ‚ü®(N‚ÇÇ + 1), nat.succ_le_of_lt $ lt_of_le_of_lt hN
      (upcrossing_lt_upcrossing_of_exists_upcrossing hab hN‚ÇÅ hN‚ÇÅ' hN‚ÇÇ hN‚ÇÇ')‚ü© }
end

/-- A realization of a stochastic process with bounded upcrossings and bounded limit infimums is
convergent. -/
lemma tendsto_of_bdd_uncrossing {x : Œ±}
  (hf‚ÇÅ : ‚àÉ R, at_top.liminf (Œª n, |f n x|) < R)
  (hf‚ÇÇ : ‚àÄ a b : ‚Ñö, ‚àÉ k : ‚Ñï, upcrossing a b f x ‚â§ k) :
  ‚àÉ c, tendsto (Œª n, f n x) at_top (ùìù c) :=
begin
  refine tendsto_of_no_upcrossings rat.dense_range_cast _ _ _,
  { intros a ha b hb hab,
    obtain ‚ü®‚ü®a, rfl‚ü©, ‚ü®b, rfl‚ü©‚ü© := ‚ü®ha, hb‚ü©,
    exact of_bdd_upcrossing_before hab (hf‚ÇÇ a b) },
  { sorry },
  { sorry }
end

lemma submartingale.upcrossing_before_bdd' (hf : submartingale f ‚Ñ± Œº) :
  ‚àÄ·µê x ‚àÇŒº, ‚àÉ k : ‚Ñï, upcrossing a b f x ‚â§ k :=
begin
  rw ae_iff,
  by_contra h, push_neg at h,
  rw [‚Üê pos_iff_ne_zero, set.set_of_forall] at h,
  sorry
end

lemma submartingale.upcrossing_before_bdd (hf : submartingale f ‚Ñ± Œº) :
  ‚àÄ·µê x ‚àÇŒº, ‚àÄ a b : ‚Ñö, ‚àÉ k : ‚Ñï, upcrossing a b f x ‚â§ k :=
begin
  suffices : ‚àÄ a b : ‚Ñö, ‚àÄ·µê x ‚àÇŒº, ‚àÉ k : ‚Ñï, upcrossing a b f x ‚â§ k,
  { simp_rw ae_iff at this ‚ä¢,
    push_neg at this ‚ä¢,
    rw set.set_of_exists,
    refine nonpos_iff_eq_zero.1 ((measure_Union_le _).trans
      (((tsum_eq_zero_iff ennreal.summable).2 (Œª a, _)).le)),
    rw set.set_of_exists,
    exact nonpos_iff_eq_zero.1 ((measure_Union_le _).trans
      (((tsum_eq_zero_iff ennreal.summable).2 (Œª b, this a b)).le)) },
  rintro a b,
  exact hf.upcrossing_before_bdd',
end

lemma liminf_at_top_ae_bdd_of_snorm_bdd (hbbd : ‚àÉ R, ‚àÄ n, snorm (f n) 1 Œº ‚â§ R) :
  ‚àÄ·µê x ‚àÇŒº, ‚àÉ R, at_top.liminf (Œª n, |f n x|) < R :=
begin
  sorry
end

/-- An L¬π-bounded submartingale converges almost everywhere. -/
lemma submartingale.exists_ae_tendsto_of_bdd
  (hf : submartingale f ‚Ñ± Œº) (hbbd : ‚àÉ R, ‚àÄ n, snorm (f n) 1 Œº ‚â§ R) :
  ‚àÄ·µê x ‚àÇŒº, ‚àÉ c, tendsto (Œª n, f n x) at_top (ùìù c) :=
begin
  filter_upwards [hf.upcrossing_before_bdd, liminf_at_top_ae_bdd_of_snorm_bdd hbbd] with x h‚ÇÅ h‚ÇÇ,
  exact tendsto_of_bdd_uncrossing h‚ÇÇ h‚ÇÅ,
end

/-- **Almost everywhere martingale convergence theorem**: An L¬π-bounded submartingale converges
almost everywhere to a L¬π random variable. -/
lemma submartingale.exists_mem_‚Ñí1_ae_tendsto_of_bdd
  (hf : submartingale f ‚Ñ± Œº) (hbbd : ‚àÉ R, ‚àÄ n, snorm (f n) 1 Œº ‚â§ R) :
  ‚àÉ g : Œ± ‚Üí ‚Ñù, mem_‚Ñíp g 1 Œº ‚àß
  ‚àÄ·µê x ‚àÇŒº, tendsto (Œª n, f n x) at_top (ùìù (g x)) :=
begin
  sorry
end

end measure_theory
