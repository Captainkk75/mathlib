/-
Copyright (c) 2019 S√©bastien Gou√´zel. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: S√©bastien Gou√´zel
-/
import topology.uniform_space.cauchy
import topology.uniform_space.separation
import topology.dense_embedding

/-!
# Theory of complete separated uniform spaces.

This file is for elementary lemmas that depend on both Cauchy filters and separation.
-/

open filter
open_locale topological_space filter

variables {Œ± : Type*}

/-In a separated space, a complete set is closed -/
lemma is_complete.is_closed  [uniform_space Œ±] [t2_space Œ±] {s : set Œ±} (h : is_complete s) :
  is_closed s :=
is_closed_iff_cluster_pt.2 $ Œª a ha, begin
  let f := ùìù[s] a,
  have : cauchy f := cauchy_nhds.mono' ha inf_le_left,
  rcases h f this (inf_le_right) with ‚ü®y, ys, fy‚ü©,
  rwa (tendsto_nhds_unique' ha inf_le_left fy : a = y)
end

namespace dense_inducing
open filter
variables [topological_space Œ±] {Œ≤ : Type*} [topological_space Œ≤]
variables {Œ≥ : Type*} [uniform_space Œ≥] [complete_space Œ≥] [t2_space Œ≥]

lemma continuous_extend_of_cauchy {e : Œ± ‚Üí Œ≤} {f : Œ± ‚Üí Œ≥}
  (de : dense_inducing e) (h : ‚àÄ b : Œ≤, cauchy (map f (comap e $ ùìù b))) :
  continuous (de.extend f) :=
begin
  letI : regular_space Œ≥ := uniform_space.regular_of_t2,
  exact de.continuous_extend (Œª b, complete_space.complete (h b))
end

end dense_inducing
